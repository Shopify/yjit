name: YJIT options
on: [push, pull_request]
jobs:
  make:
    strategy:
      matrix:
        # To make job names consistent
        test_task: [ "check" ]
        # Run with multiple thresholds and params to surface more bugs
        yjit_opts: [
          "--yjit-call-threshold=1 --yjit-max-versions=1",
          "--yjit-call-threshold=1",
          "--yjit-call-threshold=2"
        ]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      TESTOPTS: '-q --tty=no'
      RUN_OPTS: '--disable-gems ${{ matrix.yjit_opts }}'
      GITPULLOPTIONS: --no-tags origin ${{ github.ref }}
    steps:
      - run: mkdir build
        working-directory:
      - name: Install libraries
        run: |
          set -x
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev bison autoconf ruby
      - name: git config
        run: |
          git config --global advice.detachedHead 0
          git config --global init.defaultBranch garbage
      - uses: actions/checkout@v2
        with:
          path: src
      - name: Fixed world writable dirs
        run: |
          chmod -v go-w $HOME $HOME/.config
          sudo chmod -R go-w /usr/share
          sudo bash -c 'IFS=:; for d in '"$PATH"'; do chmod -v go-w $d; done' || :
      - name: Set ENV
        run: |
          echo "JOBS=-j$((1 + $(nproc --all)))" >> $GITHUB_ENV
      - run: ./autogen.sh
        working-directory: src
      - name: Run configure
        run: ../src/configure -C --disable-install-doc
      - run: make $JOBS incs
      - run: make $JOBS
      - run: sudo make $JOBS -s install
      - run: sudo apt-get install gdb # used by test / test-all failure
      - name: Run test
        run: |
          ulimit -c unlimited
          make $JOBS -s test RUN_OPTS="$RUN_OPTS"
        timeout-minutes: 60
      - name: Run test-all
        run: |
          ulimit -c unlimited
          make $JOBS -s test-all RUN_OPTS="$RUN_OPTS"
        timeout-minutes: 60
      - name: Run test-spec
        run: |
          ulimit -c unlimited
          make $JOBS -s test-spec RUN_OPTS="$RUN_OPTS"
        timeout-minutes: 60

defaults:
  run:
    working-directory: build
